{"ast":null,"code":"var _jsxFileName = \"/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport StarWars from '../images/star_wars.png';\nimport Episodes from './Episodes';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  const getData = async () => {\n    const response = await fetch(\"https://swapi.dev/api/films/\"); //Fetching fillm data from api\n\n    const r = await response.json();\n    setEpisodes(r.results);\n  };\n\n  function filterFilms() {\n    let filteredEpisode = new Array();\n\n    for (const [film, value] of Object.entries(episodes)) {\n      // Filter films: Keep only those directed by George Lucas\n      if (value.director.toLowerCase() == \"george lucas\") {\n        filteredEpisode.push(value);\n      }\n    } // Sort by episode_id\n\n\n    filteredEpisode = filteredEpisode.sort(function (a, b) {\n      return a.episode_id - b.episode_id;\n    });\n    return filteredEpisode;\n  }\n\n  const [episodes, setEpisodes] = useState([]);\n  getData();\n  let targetEpisodes = filterFilms();\n\n  if (episodes.length != 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"Main.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mainContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"swTitleDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"swTitle\",\n            src: StarWars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"epContainer\",\n          children: targetEpisodes.map(movies => /*#__PURE__*/_jsxDEV(Episodes, {\n            ep: movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n        integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n        crossorigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Spinner, {\n        animation: \"border\",\n        color: \"white\",\n        id: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Main, \"vTDZdacYv2oMOTPFruAJgnlP1vU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Main.js"],"names":["React","useState","StarWars","Episodes","ReactBootStrap","Main","props","getData","response","fetch","r","json","setEpisodes","results","filterFilms","filteredEpisode","Array","film","value","Object","entries","episodes","director","toLowerCase","push","sort","a","b","episode_id","targetEpisodes","length","map","movies"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B,CAD0B,CACmC;;AAC7D,UAAMC,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAhB;AACAC,IAAAA,WAAW,CAACF,CAAC,CAACG,OAAH,CAAX;AACD,GAJD;;AAMA,WAASC,WAAT,GAAuB;AAEnB,QAAIC,eAAe,GAAG,IAAIC,KAAJ,EAAtB;;AAEA,SAAK,MAAM,CAACC,IAAD,EAAOC,KAAP,CAAX,IAA4BC,MAAM,CAACC,OAAP,CAAeC,QAAf,CAA5B,EAAqD;AAEjD;AACA,UAAIH,KAAK,CAACI,QAAN,CAAeC,WAAf,MAAgC,cAApC,EAAmD;AAC/CR,QAAAA,eAAe,CAACS,IAAhB,CAAqBN,KAArB;AACH;AACJ,KAVkB,CAWnB;;;AACAH,IAAAA,eAAe,GAAGA,eAAe,CAACU,IAAhB,CAAqB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AACjD,aAAOD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAxB;AACH,KAFiB,CAAlB;AAGA,WAAOb,eAAP;AACH;;AAED,QAAM,CAACM,QAAD,EAAWT,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACAM,EAAAA,OAAO;AACP,MAAIsB,cAAc,GAAGf,WAAW,EAAhC;;AAGA,MAAIO,QAAQ,CAACS,MAAT,IAAmB,CAAvB,EAAyB;AACrB,wBACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACI;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAC,eAAX;AAAA,gCACA;AAAK,UAAA,EAAE,EAAC,YAAR;AAAA,iCACI;AAAK,YAAA,EAAE,EAAC,SAAR;AAAkB,YAAA,GAAG,EAAE5B;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADA,eAII;AAAK,UAAA,KAAK,EAAC,aAAX;AAAA,oBACK2B,cAAc,CAACE,GAAf,CAAqBC,MAAD,iBACjB,QAAC,QAAD;AAAU,YAAA,EAAE,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD,MAiBK;AACD,wBACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACI;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC,yEAA5B;AACA,QAAA,SAAS,EAAC,yEADV;AAEA,QAAA,WAAW,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI,QAAC,cAAD,CAAgB,OAAhB;AAAwB,QAAA,SAAS,EAAC,QAAlC;AAA4C,QAAA,KAAK,EAAC,OAAlD;AAA0D,QAAA,EAAE,EAAC;AAA7D;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;AAIJ,CA/DD;;GAAM3B,I;;KAAAA,I;AAkEN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport StarWars from '../images/star_wars.png';\nimport Episodes  from './Episodes';\nimport * as ReactBootStrap from 'react-bootstrap';\n\nconst Main = (props) => {\n\n    const getData = async () => {\n      const response = await fetch(\"https://swapi.dev/api/films/\") //Fetching fillm data from api\n      const r = await response.json();\n      setEpisodes(r.results);\n    }\n\n    function filterFilms() {\n\n        let filteredEpisode = new Array();\n\n        for (const [film, value] of Object.entries(episodes)){\n\n            // Filter films: Keep only those directed by George Lucas\n            if (value.director.toLowerCase() == \"george lucas\"){\n                filteredEpisode.push(value)\n            }\n        }\n        // Sort by episode_id\n        filteredEpisode = filteredEpisode.sort(function(a, b){\n            return a.episode_id - b.episode_id;\n        })\n        return filteredEpisode;\n    } \n\n    const [episodes, setEpisodes] = useState([]);\n    getData();\n    let targetEpisodes = filterFilms();\n\n\n    if (episodes.length != 0){\n        return (\n            <div class=\"main\">\n                <link rel=\"stylesheet\" href=\"Main.css\"/>\n                <div class=\"mainContainer\">\n                <div id=\"swTitleDiv\">\n                    <img id=\"swTitle\" src={StarWars}></img>\n                </div>\n                    <div class=\"epContainer\">\n                        {targetEpisodes.map( (movies) => (\n                            <Episodes ep={movies}></Episodes>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        )\n    } \n    else {\n        return (\n            <div class=\"main\">\n                <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n                integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n                crossorigin=\"anonymous\"\n                />\n                <ReactBootStrap.Spinner animation=\"border\"  color=\"white\" id=\"spinner\"/>\n\n            </div>\n        )\n    }\n\n\n    \n}\n\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}