{"ast":null,"code":"var _jsxFileName = \"/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = props => {\n  _s();\n\n  const getCharacter = async () => {\n    let arr = [];\n\n    for (let i = 0; i < characters.length; i++) {\n      const character = await fetch(characters[i]);\n      const r = await character.json();\n      arr.push(r.name);\n    }\n\n    setNames(arr);\n    setLoading(false);\n  };\n\n  const [names, setNames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const characters = props.location.state.characters;\n  getCharacter();\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: names.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n        integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n        crossorigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Spinner, {\n        animation: \"grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Characters, \"ntfZlm4estXYaJRH+zyI6jpIxa0=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js"],"names":["React","useState","ReactBootStrap","Characters","props","getCharacter","arr","i","characters","length","character","fetch","r","json","push","name","setNames","setLoading","names","loading","location","state","map","n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAMC,YAAY,GAAG,YAAY;AAE7B,QAAIC,GAAG,GAAG,EAAV;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,UAAU,CAACC,MAA/B,EAAuCF,CAAC,EAAxC,EAA2C;AAEvC,YAAMG,SAAS,GAAG,MAAMC,KAAK,CAACH,UAAU,CAACD,CAAD,CAAX,CAA7B;AACA,YAAMK,CAAC,GAAG,MAAMF,SAAS,CAACG,IAAV,EAAhB;AACAP,MAAAA,GAAG,CAACQ,IAAJ,CAASF,CAAC,CAACG,IAAX;AACH;;AACDC,IAAAA,QAAQ,CAACV,GAAD,CAAR;AACAW,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAZD;;AAcA,QAAM,CAACC,KAAD,EAAQF,QAAR,IAAqBf,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACkB,OAAD,EAAUF,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMO,UAAU,GAAGJ,KAAK,CAACgB,QAAN,CAAeC,KAAf,CAAqBb,UAAxC;AACAH,EAAAA,YAAY;;AAGZ,MAAI,CAACc,OAAL,EAAa;AAET,wBACI;AAAA,gBACKD,KAAK,CAACI,GAAN,CAAWC,CAAD,iBACP;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GAVD,MAUO;AACH,wBACI;AAAA,8BACI;AACA,QAAA,GAAG,EAAC,YADJ;AAEA,QAAA,IAAI,EAAC,yEAFL;AAGA,QAAA,SAAS,EAAC,yEAHV;AAIA,QAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,cAAD,CAAgB,OAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;AACJ,CA/CD;;GAAMpB,U;;KAAAA,U;AAiDN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as ReactBootStrap from 'react-bootstrap';\n\n\nconst Characters = (props) => {\n\n    const getCharacter = async () => {\n\n        let arr = [];\n\n        for (let i = 0; i < characters.length; i++){\n\n            const character = await fetch(characters[i])\n            const r = await character.json();\n            arr.push(r.name)\n        }\n        setNames(arr);\n        setLoading(false);\n    }\n\n    const [names, setNames ] = useState([])\n    const [loading, setLoading] = useState(true);\n    const characters = props.location.state.characters;\n    getCharacter();\n\n\n    if (!loading){\n\n        return (\n            <div>\n                {names.map((n) => (\n                    <div>{n}</div>\n\n                ))}\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <link\n                rel=\"stylesheet\"\n                href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n                integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n                crossorigin=\"anonymous\"\n                />\n                <ReactBootStrap.Spinner animation=\"grow\" />\n                <p>Loading Characters</p>\n\n            </div>\n        )\n    }\n}\n\nexport default Characters;"]},"metadata":{},"sourceType":"module"}