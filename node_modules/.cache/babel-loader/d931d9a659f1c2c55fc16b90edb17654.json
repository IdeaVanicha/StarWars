{"ast":null,"code":"var _jsxFileName = \"/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = props => {\n  async function getEpisode() {\n    const url = this.props.location.pathname;\n    const urlSplit = url.split(\"/\");\n    const result = await API.graphql(graphqlOperation(getCourse, {\n      id: urlSplit.pop()\n    }));\n    console.log(\"characters\", result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js"],"names":["React","Characters","props","getEpisode","url","location","pathname","urlSplit","split","result","API","graphql","graphqlOperation","getCourse","id","pop","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAG1B,iBAAeC,UAAf,GAA4B;AAExB,UAAMC,GAAG,GAAG,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,QAAhC;AACA,UAAMC,QAAQ,GAAGH,GAAG,CAACI,KAAJ,CAAU,GAAV,CAAjB;AACA,UAAMC,MAAM,GAAG,MAAMC,GAAG,CAACC,OAAJ,CAAYC,gBAAgB,CAACC,SAAD,EAAY;AAAEC,MAAAA,EAAE,EAAEP,QAAQ,CAACQ,GAAT;AAAN,KAAZ,CAA5B,CAArB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BR,MAA1B;AACC;;AAEL,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAlBD;;KAAMR,U;AAoBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\n\nconst Characters = (props) => {\n\n\n    async function getEpisode() {\n\n        const url = this.props.location.pathname;\n        const urlSplit = url.split(\"/\")\n        const result = await API.graphql(graphqlOperation(getCourse, { id: urlSplit.pop()}))\n\n        console.log(\"characters\", result);\n        }\n\n    return (\n        <div>\n            <h1></h1>\n\n        </div>\n    )\n}\n\nexport default Characters;"]},"metadata":{},"sourceType":"module"}