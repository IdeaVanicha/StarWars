{"ast":null,"code":"var _jsxFileName = \"/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = props => {\n  _s();\n\n  const getCharacter = async () => {\n    let arr = [];\n\n    for (let i = 0; i < characters.length; i++) {\n      const character = await fetch(characters[i]);\n      const r = await character.json();\n      arr.push(r.name);\n    }\n\n    setNames(arr);\n    setLoading(false);\n  };\n\n  const [names, setNames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const characters = props.location.state.characters;\n  getCharacter();\n\n  if (!loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"EpDisplay.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"nameDisplay\",\n        children: names.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", n, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          component: Link,\n          to: `/HomePage`,\n          id: \"welcomeButton\",\n          children: \"Back to Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"cPage\",\n      children: [/*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"EpDisplay.css\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n        integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n        crossorigin: \"anonymous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Spinner, {\n        animation: \"grow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Characters, \"ntfZlm4estXYaJRH+zyI6jpIxa0=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js"],"names":["React","useState","ReactBootStrap","Button","Link","Characters","props","getCharacter","arr","i","characters","length","character","fetch","r","json","push","name","setNames","setLoading","names","loading","location","state","map","n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAMC,YAAY,GAAG,YAAY;AAE7B,QAAIC,GAAG,GAAG,EAAV;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,UAAU,CAACC,MAA/B,EAAuCF,CAAC,EAAxC,EAA2C;AAEvC,YAAMG,SAAS,GAAG,MAAMC,KAAK,CAACH,UAAU,CAACD,CAAD,CAAX,CAA7B;AACA,YAAMK,CAAC,GAAG,MAAMF,SAAS,CAACG,IAAV,EAAhB;AACAP,MAAAA,GAAG,CAACQ,IAAJ,CAASF,CAAC,CAACG,IAAX;AACH;;AACDC,IAAAA,QAAQ,CAACV,GAAD,CAAR;AACAW,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAZD;;AAcA,QAAM,CAACC,KAAD,EAAQF,QAAR,IAAqBjB,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACoB,OAAD,EAAUF,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMS,UAAU,GAAGJ,KAAK,CAACgB,QAAN,CAAeC,KAAf,CAAqBb,UAAxC;AACAH,EAAAA,YAAY;;AAGZ,MAAI,CAACc,OAAL,EAAa;AAET,wBACI;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,8BACI;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA,kBACKD,KAAK,CAACI,GAAN,CAAWC,CAAD,iBACP;AAAA,0BAAOA,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAQI;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAErB,IAAnB;AAAyB,UAAA,EAAE,EAAG,WAA9B;AAA0C,UAAA,EAAE,EAAC,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAjBD,MAiBO;AACH,wBACI;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,8BACI;AAAM,QAAA,GAAG,EAAC,YAAV;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AACA,QAAA,GAAG,EAAC,YADJ;AAEA,QAAA,IAAI,EAAC,yEAFL;AAGA,QAAA,SAAS,EAAC,yEAHV;AAIA,QAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,cAHJ,eASI,QAAC,cAAD,CAAgB,OAAhB;AAAwB,QAAA,SAAS,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH;AACJ,CAxDD;;GAAMC,U;;KAAAA,U;AA0DN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Characters = (props) => {\n\n    const getCharacter = async () => {\n\n        let arr = [];\n\n        for (let i = 0; i < characters.length; i++){\n\n            const character = await fetch(characters[i])\n            const r = await character.json();\n            arr.push(r.name)\n        }\n        setNames(arr);\n        setLoading(false);\n    }\n\n    const [names, setNames ] = useState([])\n    const [loading, setLoading] = useState(true);\n    const characters = props.location.state.characters;\n    getCharacter();\n\n\n    if (!loading){\n\n        return (\n            <div class=\"cPage\">\n                <link rel=\"stylesheet\" href=\"EpDisplay.css\"/>\n\n                <div class=\"nameDisplay\">\n                    {names.map((n) => (\n                        <div> {n} </div>\n                    ))}\n                </div>\n                <div>\n                    <Button component={Link} to={`/HomePage`} id=\"welcomeButton\">Back to Home</Button>\n                </div>\n\n            </div>\n        )\n    } else {\n        return (\n            <div class=\"cPage\">\n                <link rel=\"stylesheet\" href=\"EpDisplay.css\"/>\n\n                <link\n                rel=\"stylesheet\"\n                href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n                integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n                crossorigin=\"anonymous\"\n                />\n                <ReactBootStrap.Spinner animation=\"grow\" />\n                <p>Loading Characters</p>\n\n            </div>\n        )\n    }\n}\n\nexport default Characters;"]},"metadata":{},"sourceType":"module"}