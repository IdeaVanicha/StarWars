{"ast":null,"code":"var _jsxFileName = \"/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as ReactBootStrap from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Characters = props => {\n  _s();\n\n  const [names, setNames] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const characters = props.location.state.characters;\n\n  const getCharacter = async () => {\n    let arr = [];\n\n    for (let i = 0; i < characters.length; i++) {\n      const character = await fetch(characters[i]);\n      const r = await character.json();\n      arr.push(r.name);\n    }\n\n    setNames(arr);\n    setLoading(false);\n  };\n\n  const characterNames = getCharacter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\",\n      integrity: \"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\",\n      crossorigin: \"anonymous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactBootStrap.Spinner, {\n      id: \"spinner\",\n      animation: \"border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), names.map(n => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Characters, \"ntfZlm4estXYaJRH+zyI6jpIxa0=\");\n\n_c = Characters;\nexport default Characters;\n\nvar _c;\n\n$RefreshReg$(_c, \"Characters\");","map":{"version":3,"sources":["/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Characters.js"],"names":["React","useState","ReactBootStrap","Characters","props","names","setNames","loading","setLoading","characters","location","state","getCharacter","arr","i","length","character","fetch","r","json","push","name","characterNames","map","n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,cAAZ,MAAgC,iBAAhC;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMQ,UAAU,GAAGL,KAAK,CAACM,QAAN,CAAeC,KAAf,CAAqBF,UAAxC;;AAEA,QAAMG,YAAY,GAAG,YAAY;AAE7B,QAAIC,GAAG,GAAG,EAAV;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACM,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AAEvC,YAAME,SAAS,GAAG,MAAMC,KAAK,CAACR,UAAU,CAACK,CAAD,CAAX,CAA7B;AACA,YAAMI,CAAC,GAAG,MAAMF,SAAS,CAACG,IAAV,EAAhB;AACAN,MAAAA,GAAG,CAACO,IAAJ,CAASF,CAAC,CAACG,IAAX;AACH;;AACDf,IAAAA,QAAQ,CAACO,GAAD,CAAR;AACAL,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH,GAZD;;AAaA,QAAMc,cAAc,GAAGV,YAAY,EAAnC;AAEA,sBACI;AAAA,4BACI;AACA,MAAA,GAAG,EAAC,YADJ;AAEA,MAAA,IAAI,EAAC,yEAFL;AAGA,MAAA,SAAS,EAAC,yEAHV;AAIA,MAAA,WAAW,EAAC;AAJZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,cAAD,CAAgB,OAAhB;AAAwB,MAAA,EAAE,EAAC,SAA3B;AAAqC,MAAA,SAAS,EAAC,QAA/C;AAAwD,MAAA,IAAI,EAAC,QAA7D;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAPJ,EAUKP,KAAK,CAACkB,GAAN,CAAWC,CAAD,iBACP;AAAA,6BACK;AAAA,kBAAMA;AAAN;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,YADH,CAVL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAxCD;;GAAMrB,U;;KAAAA,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as ReactBootStrap from 'react-bootstrap';\n\n\nconst Characters = (props) => {\n\n    const [names, setNames ] = useState([])\n    const [loading, setLoading] = useState(true);\n    const characters = props.location.state.characters;\n\n    const getCharacter = async () => {\n\n        let arr = [];\n\n        for (let i = 0; i < characters.length; i++){\n\n            const character = await fetch(characters[i])\n            const r = await character.json();\n            arr.push(r.name)\n        }\n        setNames(arr);\n        setLoading(false);\n    }\n    const characterNames = getCharacter();\n\n    return (\n        <div>\n            <link\n            rel=\"stylesheet\"\n            href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n            integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n            crossorigin=\"anonymous\"\n            />\n            <ReactBootStrap.Spinner id=\"spinner\" animation=\"border\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </ReactBootStrap.Spinner>\n            {names.map((n) => (\n                <div>\n                     <h1>{ n }</h1>\n                </div>\n            ))}\n\n        </div>\n    )\n}\n\nexport default Characters;"]},"metadata":{},"sourceType":"module"}