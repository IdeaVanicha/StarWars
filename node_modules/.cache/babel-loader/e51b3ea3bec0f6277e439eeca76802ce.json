{"ast":null,"code":"var _jsxFileName = \"/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport StarWars from '../images/star_wars.png';\nimport Episodes from './Episodes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = props => {\n  _s();\n\n  const getData = async () => {\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const r = await response.json();\n    setEpisodes(r.results);\n  };\n\n  function filterFilms() {\n    let filteredEpisode = new Array();\n\n    for (const [film, value] of Object.entries(episodes)) {\n      if (value.director.toLowerCase() == \"george lucas\") {\n        filteredEpisode.push(value);\n      }\n    } // Sort by episode_id\n\n\n    filteredEpisode = filteredEpisode.sort(function (a, b) {\n      return a.episode_id - b.episode_id;\n    });\n    return filteredEpisode;\n  }\n\n  getData();\n  let targetEpisodes = filterFilms();\n  const [episodes, setEpisodes] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"link\", {\n      rel: \"stylesheet\",\n      href: \"Main.css\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      id: \"swTitle\",\n      src: StarWars\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"epContainer\",\n      children: targetEpisodes.map(movies => /*#__PURE__*/_jsxDEV(Episodes, {\n        ep: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"vTDZdacYv2oMOTPFruAJgnlP1vU=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/ideavanicha/Desktop/starWars/star-wars/src/components/Main.js"],"names":["React","useState","StarWars","Episodes","Main","props","getData","response","fetch","r","json","setEpisodes","results","filterFilms","filteredEpisode","Array","film","value","Object","entries","episodes","director","toLowerCase","push","sort","a","b","episode_id","targetEpisodes","map","movies"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAsB,YAAtB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEpB,QAAMC,OAAO,GAAG,YAAY;AAC1B,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAA5B;AACA,UAAMC,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAhB;AACAC,IAAAA,WAAW,CAACF,CAAC,CAACG,OAAH,CAAX;AACD,GAJD;;AAMA,WAASC,WAAT,GAAwB;AAEpB,QAAIC,eAAe,GAAG,IAAIC,KAAJ,EAAtB;;AAEA,SAAK,MAAM,CAACC,IAAD,EAAOC,KAAP,CAAX,IAA4BC,MAAM,CAACC,OAAP,CAAeC,QAAf,CAA5B,EAAqD;AAEjD,UAAIH,KAAK,CAACI,QAAN,CAAeC,WAAf,MAAgC,cAApC,EAAmD;AAC/CR,QAAAA,eAAe,CAACS,IAAhB,CAAqBN,KAArB;AACH;AACJ,KATmB,CAUpB;;;AACAH,IAAAA,eAAe,GAAGA,eAAe,CAACU,IAAhB,CAAqB,UAASC,CAAT,EAAYC,CAAZ,EAAc;AACjD,aAAOD,CAAC,CAACE,UAAF,GAAeD,CAAC,CAACC,UAAxB;AACH,KAFiB,CAAlB;AAGA,WAAOb,eAAP;AACH;;AAEDR,EAAAA,OAAO;AACP,MAAIsB,cAAc,GAAGf,WAAW,EAAhC;AACA,QAAM,CAACO,QAAD,EAAWT,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAGA,sBACI;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA,4BACI;AAAM,MAAA,GAAG,EAAC,YAAV;AAAuB,MAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAkB,MAAA,GAAG,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,KAAK,EAAC,aAAX;AAAA,gBACK0B,cAAc,CAACC,GAAf,CAAqBC,MAAD,iBACjB,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzCD;;GAAM1B,I;;KAAAA,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport StarWars from '../images/star_wars.png';\nimport Episodes  from './Episodes';\n\nconst Main = (props) => {\n\n    const getData = async () => {\n      const response = await fetch(\"https://swapi.dev/api/films/\")\n      const r = await response.json();\n      setEpisodes(r.results);\n    }\n\n    function filterFilms( ) {\n\n        let filteredEpisode = new Array();\n\n        for (const [film, value] of Object.entries(episodes)){\n\n            if (value.director.toLowerCase() == \"george lucas\"){\n                filteredEpisode.push(value)\n            }\n        }\n        // Sort by episode_id\n        filteredEpisode = filteredEpisode.sort(function(a, b){\n            return a.episode_id - b.episode_id;\n        })\n        return filteredEpisode;\n    } \n\n    getData();\n    let targetEpisodes = filterFilms( );\n    const [episodes, setEpisodes] = useState([]);\n\n\n    return (\n        <div class=\"main\">\n            <link rel=\"stylesheet\" href=\"Main.css\"/>\n            <img id=\"swTitle\" src={StarWars}></img>\n            <div class=\"epContainer\">\n                {targetEpisodes.map( (movies) => (\n                    <Episodes ep={movies}></Episodes>\n                ))}\n            </div>\n        </div>\n    )\n}\n\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}